list
list
break 17
r
p buf
p r
c
break 17
r
list
p buf
p/x buf

p/x $buf
p/x buf
print $buf
print buf
print buf@10
print buf@1
print buf@2
find 0x7fffffff0000, +100, '\0'
p buf
find 0x55555555a3c0, +100, '\0'
find 0x55555555a3c0, +200, '\0'
p 0x55555555a42b - 0x55555555a3c0
x/s buf
x/tx buf
p strlen(buf)
p (int) strlen(buf)
list
list
break 18
r
p buf
p r
list
list
break 18
r
p buf
p r
c
list
list
list
list
list
break 42 47 52
break 42
break 47
break 52
r
p c
print c & UTF_LEN_4_MASK
x/x c
x/x &c
x/x UTF_LEN_4_MASK
x/x &UTF_LEN_4_MASK
p/x &UTF_LEN_4_MASK
p/x UTF_LEN_4_MASK
p/x c
p/x c & UTF_LEN_4_MASK
p/x (c & UTF_LEN_4_MASK) == UTF_LEN_4_MASK
list
list
break 27
c
r
c
list
break 30
r
c
p n
p/d n
p/x n
step
p/x n
p c
s
p/c
x/x &c
x/x c
step
x/x buf
p buf
p/c buf
p/s buf
x/x buf
step
step
p c
x/x c
x/x &c
break 28
r
p n
step
p n
step
p b
p buf
p/c buf
p/cx buf
p/c1 buf
x/x buf
x/x (char *)buf
x/x (char)buf
x/c (char *)buf
step
x/c (char *)buf
step
p n
break 32
r
p n
p/d n
break 93 if c == 'n'
r
break 93 if c == 'n'
r
break 93
r
list
lits
list
list
list
list
list
list
list
list
break 63 if c = 'n'
r
p c
print n
c
c
c
p c
c
c
clear break 3
break 63 if c == 'n'
r
c
c
c
c
c
break 63
r
c
c
c
c
c
c
c
c
c
c
c
c
c
c
p c
c
c
c
c
c
c
fflush();
eval fflush()
eval "fflush()"
eval "fflush();"
list
list
list
break 31 if n == 0
r
p n
p c
step
p n
p c
p buf
p/c buf
p/s buf
x/x buf
x/ c buf
x/c buf
p/c buf
p/c *buf
p/c *buf
p/c *(char *)buf
stack
p $sp
p $rsp
info
info stack
bt
bt -f
ste
s
x/c buf
s
s
s
s
s
s
s
s
s
s
s
p/c buf
x/x buf
x/c buf
x/d buf
x/x buf
x/x buf
break 43
r
p n
step
p n
s
p n
n >= 0
p n >= 0
s
s
