p/x u2f.f
p/x u2f.u
p isnan(u2f.f)
p (int) isnan(u2f.f)
step
step
x/x nan_u
s
x/x nan_u
x/x nan
p/x *nan
p/x *nan_u
x/x *nan_u
x/x nan_u
x/4x nan_u
x/xw nan_u
x/1xw nan_u
x/2xw nan_u
x/2x2 nan_u
x/2xw nan_u
x/2xw nan
p nan
p *nan
p *nan_u
p/x *nan_u
p/x *nan
p/x NAN_MASK
step
p/x *nan_u
p *str
p/x *str
step
p/x *nan_u
p/s *str
x/4x str
p/x str
break 33
r
p/x str
p/s str
p/x &str
break 10
c
p/x str
x/4c str
x/4cw str
x/4x str
x/x str
p/x *nan_u
p/x nan_u
p/x nan
step
p/x nan
p/x nan_u
p/x nan
exit
break 36
r okk
p u2f.f
p str
p u2f.u
p/x u2f.u
p/x u2f.f
p str
step
p *nan
p/x *nan
p str
step
p/x *nan_u
step
p/x *nan_u
p str
p/x str
p/x *str
list
p str
p *str
p/x *str
x/4x str
x/x str
x/xw str
p *((uint64_t *) str
p (*((uint64_t *) str)
type str
chat get type of str
chat get value of str in hex
chat get value of str in hex format
chat get value of str in hex format
chat print value of str in hex format
chat print current line
chat print the current line
chat print which line we are stopped at
list 12
p *nan_u
p/x *nan_u
p/x *nan_u ^ str
p/x *nan_u ^ *str
p/x *str
p/s str
p/x str
p/x *str
p/4x *str
x/x str
x/4x str
x/x str
x/s str
x/4x str
ptype str
x/s str
list 12
x/x nan_u
x/4x nan_u
x/x *nan_u
x/x nan_u
step
x/x nan_u
x/4x nan_u
x/8x nan_u
x/xw nan_u
x/xW nan_u
x/xw nan_u
x/2xw nan_u
x/2xw str
list 13
break 10
r okk
list 10
x/s str
x/x str
x/x nan
x/s str
x/4x str
x/4x nan
x/8x nan
chat do x/8x nan but have it combine into one 64-bit hex string
chat do x/8x nan but have it combine into one 64-bit hex string
chat do x/8x nan but have it combine into one 64-bit hex string
explain in gdb, how to do x/8x myVar but have it combine into one 64-bit hex string
x/8x nan | tr -d ' ' | awk '{print $1 $2 $3 $4 $5 $6 $7 $8}
explain in gdb, what are the possible values for "w" in x/nxw
explain in gdb, what are the possible values for "w" in x/nxw? some examples are g and b
x/xg nan
x/xg str
x/s str
x/xg str
stack
chat what line is the current breakpoint
chat what line are we stopped at
chat what line are we paused at
chat what line are we paused at
x/xg nan
x/xg str
x/s str
step
step
chat in gdb how can I write more than one command in a single line. be brief
chat in gdb how can I write more than one command in a single line. be brief
chat in gdb how can I write more than one command in a single line. be brief
explain in gdb how can I write more than one command in a single line. be brief
explain in gdb how can I write more than one command in a single line. be brief
x/xg nan; x/xg str; x/s str;
explain in gdb how can I write more than one command in a single line. be brief. It's not a semicolon
explain in gdb how can I write more than one command in a single line. be brief. It's not a semicolon
{x/xg nan; x/xg str; x/s str;}
define p1
x/xg nan;
x/xg str;
x/s str;
end
p1
define p1
x/xg nan
x/xg str
x/s str
end
p1
chat print which line gdb is stopped at
chat print which line gdb is stopped at
chat print which line gdb is stopped at
p1
chat show the current stack
list 12
p/x *str
x/xg nan_u
x/xg str
step
x/xg nan_u
break 12
r okk
step
x/xg nan_u
x/xg str_u
step
x/xg nan_u
x/xg str_u
p 0xf ^ 0x4
p/x 0xf ^ 0x4
p/x 0xf | 0x4
p/x 0x0 | 0x4
break 34
r okokok
x/xg nan
x/xg nan
x/xg &nan
x/xg &nan_f
break 32
run ok
x/g nan
step
break 32
run okokok
x/g nan
step
x/g nan
step
x/g nan
x/xg nan
x/s nan
print nan
p/s nan
p/f nan
x/xg nan
p (int) isnan(*nan)
step
x/g nan_f
x/xg nan_f
x/xg nan
step
c
break 19
run hello!!!!
x/xg nan
step
x/xg &decoded
x/cg &decoded
x/12c &decoded
x/12cg &decoded
x/cg &decoded
x/xg &decoded
x/xc &decoded
x/12xc &decoded
x/x &decoded
x/2x &decoded
x/2xo &decoded
x/2x &decoded
x/8x &decoded
list
list
help list
chat show the current stack
bt
chat show registers
explain what does the cs register do
chat show local variables
chat show thread local variables
